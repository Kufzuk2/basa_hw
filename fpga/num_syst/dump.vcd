$date
	Thu Nov 14 01:40:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test_num $end
$var reg 1 ! KEY0 $end
$var reg 1 " KEY1 $end
$var reg 1 # clk $end
$var reg 8 $ switches [7:0] $end
$scope module num_syst $end
$var wire 1 ! KEY0 $end
$var wire 1 " KEY1 $end
$var wire 8 % LEDR [7:0] $end
$var wire 1 # clk $end
$var wire 8 & switches [7:0] $end
$var wire 4 ' hex_right [3:0] $end
$var wire 4 ( hex_left [3:0] $end
$var wire 7 ) hex7_loc [6:0] $end
$var wire 7 * hex6_loc [6:0] $end
$var wire 7 + hex5_loc [6:0] $end
$var wire 7 , hex4_loc [6:0] $end
$var wire 4 - dec_right [3:0] $end
$var wire 1 . dec_overflow $end
$var wire 4 / dec_left [3:0] $end
$var wire 8 0 dec_in_hex [7:0] $end
$var reg 7 1 HEX4 [6:0] $end
$var reg 7 2 HEX5 [6:0] $end
$var reg 7 3 HEX6 [6:0] $end
$var reg 7 4 HEX7 [6:0] $end
$var reg 1 5 LEDG8 $end
$var reg 1 6 rst_push_1 $end
$var reg 1 7 rst_push_2 $end
$var reg 1 8 rst_pushed $end
$var reg 1 9 trans_push_1 $end
$var reg 1 : trans_push_2 $end
$var reg 1 ; trans_pushed $end
$scope module dec_dec_left $end
$var wire 4 < hex_num [3:0] $end
$var wire 7 = HEX0 [6:0] $end
$upscope $end
$scope module dec_dec_right $end
$var wire 4 > hex_num [3:0] $end
$var wire 7 ? HEX0 [6:0] $end
$upscope $end
$scope module dec_hex_left $end
$var wire 4 @ hex_num [3:0] $end
$var wire 7 A HEX0 [6:0] $end
$upscope $end
$scope module dec_hex_right $end
$var wire 4 B hex_num [3:0] $end
$var wire 7 C HEX0 [6:0] $end
$upscope $end
$scope module vin_to_bcd $end
$var wire 8 D bin [7:0] $end
$var wire 4 E left_init [3:0] $end
$var wire 1 F plus_2 $end
$var wire 5 G right_init [4:0] $end
$var wire 4 H right_dig [3:0] $end
$var wire 4 I right1 [3:0] $end
$var wire 1 J plus_1 $end
$var wire 4 K left_dig [3:0] $end
$var wire 8 L bcd [7:0] $end
$scope begin creating_bcd[0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[1] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[2] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[3] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[4] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[5] $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[6] $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$scope begin creating_bcd[7] $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx L
bx K
xJ
bx I
bx H
bx G
xF
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
x;
x:
x9
x8
x7
x6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
0#
1"
1!
$end
#10
16
19
1#
#20
0#
#30
0;
1:
08
17
1#
#40
0#
#50
0!
1#
#60
0#
#70
06
1!
1#
#80
0#
#90
07
16
18
1#
#100
0#
#110
b1000000 4
b1000000 3
b1000000 2
b1000000 1
08
17
05
1#
#120
0#
#130
1#
#140
0#
#150
1#
#160
0#
#170
b100100 *
b100100 ?
b10 -
b10 >
b110000 )
b110000 =
b11 /
b11 <
b10 H
b110010 0
b10 I
b100100 +
b100100 A
b1000000 ,
b1000000 C
b110010 L
b11 K
0F
b10 (
b10 @
b0 '
b0 B
0J
b10 G
b11 E
b100000 %
0.
b100000 $
b100000 &
b100000 D
1#
#180
0#
#190
1#
#200
0#
#210
0"
1#
#220
0#
#230
09
1"
1#
#240
0#
#250
0:
19
1;
1#
#260
0#
#270
b110000 4
b100100 3
b100100 2
0;
1:
1#
#280
0#
#290
1#
#300
0#
#310
1#
#320
0#
#330
1#
#340
0#
#350
1#
#360
0#
#370
b1111000 *
b1111000 ?
b111 -
b111 >
b1111001 )
b1111001 =
b111 H
b1111001 +
b1111001 A
b111 I
b1 /
b1 <
b1111001 ,
b1111001 C
b10111 0
b1 (
b1 @
b1 '
b1 B
b111 G
b10111 L
b1 K
b1 E
b10001 %
b10001 $
b10001 &
b10001 D
1#
#380
0#
#390
1#
#400
0#
#410
0"
1#
#420
0#
#430
09
1"
1#
#440
0#
#450
0:
19
1;
1#
#460
0#
#470
b1111001 4
b1111000 3
b1111001 2
b1111001 1
0;
1:
1#
#480
0#
#490
1#
#500
0#
#510
1#
#520
0#
#530
b100100 *
b100100 ?
b10 -
b10 >
b110000 )
b110000 =
b10 H
b100100 +
b100100 A
b10 I
b11 /
b11 <
b1000000 ,
b1000000 C
b110010 0
b10 (
b10 @
b0 '
b0 B
b10 G
b110010 L
b11 K
b11 E
b100000 %
b100000 $
b100000 &
b100000 D
1#
#540
0#
#550
1#
#560
0#
#570
1#
#580
0#
#590
1#
#600
0#
#610
1#
#620
0#
#630
1#
#640
0#
#650
1#
#660
0#
#670
b1111001 *
b1111001 ?
b1 -
b1 >
b110000 )
b110000 =
b1 H
1F
b1111001 +
b1111001 A
b1011 I
b11 /
b11 <
b1110 ,
b1110 C
b110001 0
b1 (
b1 @
b1111 '
b1111 B
1J
b10101 G
b110001 L
b11 K
b1 E
b11111 %
b11111 $
b11111 &
b11111 D
1#
#680
0#
#690
1#
#700
0#
#710
0"
1#
#720
0#
#730
09
1"
1#
#740
0#
#750
1;
0:
19
1#
#760
0#
#770
1:
0;
b1110 1
b110000 4
b1111001 3
1#
#780
0#
#790
1#
#800
0#
#810
1#
#820
0#
#830
b1000000 *
b1000000 ?
b0 -
b0 >
b1000000 )
b1000000 =
b0 H
b0 +
b0 A
b0 I
b0 /
b0 <
b1000000 ,
b1000000 C
0F
b0 0
b1000 (
b1000 @
b0 '
b0 B
0J
b0 G
b0 L
b0 K
b0 E
b10000000 %
1.
b10000000 $
b10000000 &
b10000000 D
1#
#840
0#
#850
1#
#860
0#
#870
0"
1#
#880
0#
#890
09
1"
1#
#900
0#
#910
1;
0:
19
1#
#920
0#
#930
15
1:
0;
b0 2
b1000000 1
b11100 4
b11100 3
1#
#940
0#
#950
1#
#960
0#
#970
1#
#980
0#
#990
b1110 +
b1110 A
b1111001 *
b1111001 ?
b1 -
b1 >
b1 H
b11 )
b11 =
b1 I
b1011 /
b1011 <
b1110 ,
b1110 C
b10110001 0
b1111 (
b1111 @
b1111 '
b1111 B
1J
b11011 G
b10110001 L
b1011 K
b1010 E
b11111111 %
b11111111 $
b11111111 &
b11111111 D
1#
#1000
0#
#1010
1#
#1020
0#
#1030
0"
1#
#1040
0#
#1050
09
1"
1#
#1060
0#
#1070
1;
0:
19
1#
#1080
0#
#1090
1:
0;
b1110 2
b1110 1
1#
#1100
0#
#1110
1#
#1120
0#
#1130
1#
#1140
0#
#1150
b10010 *
b10010 ?
b101 -
b101 >
b1111001 )
b1111001 =
b101 H
b101 I
b1 /
b1 <
b1000000 +
b1000000 A
b10101 0
b0 (
b0 @
b1111 G
b10101 L
b1 K
b0 E
b1111 %
0.
b1111 $
b1111 &
b1111 D
1#
#1160
0#
#1170
1#
#1180
0#
#1190
0"
1#
#1200
0#
#1210
09
1"
1#
#1220
0#
#1230
1;
0:
19
1#
#1240
0#
#1250
05
1:
0;
b1000000 2
b1111001 4
b10010 3
1#
#1260
0#
#1270
1#
#1280
0#
#1290
1#
#1300
0#
#1310
b0 *
b0 ?
b1000 -
b1000 >
b11000 0
b100100 ,
b100100 C
b1000 H
b1000 I
b1111001 +
b1111001 A
b1 (
b1 @
b10 '
b10 B
0J
b1000 G
b11000 L
b1 K
b1 E
b10010 %
b10010 $
b10010 &
b10010 D
1#
#1320
0#
#1330
1#
#1340
0#
#1350
0"
1#
#1360
0#
#1370
09
1"
1#
#1380
0#
#1390
1;
0:
19
1#
#1400
0#
#1410
1:
0;
b1111001 2
b100100 1
b0 3
1#
#1420
0#
#1430
1#
#1440
0#
#1450
1#
#1460
0#
#1470
b1000000 *
b1000000 ?
b0 -
b0 >
b10010 )
b10010 =
b0 H
b110000 +
b110000 A
b0 I
b101 /
b101 <
b1010000 0
b11 (
b11 @
1J
b1010 G
b1010000 L
b101 K
b100 E
b110010 %
b110010 $
b110010 &
b110010 D
1#
#1480
0#
#1490
1#
#1500
0#
#1510
0"
1#
#1520
0#
#1530
09
1"
1#
#1540
0#
#1550
1;
0:
19
1#
#1560
0#
#1570
1:
0;
b110000 2
b10010 4
b1000000 3
1#
#1580
0#
#1590
1#
#1600
0#
#1610
1#
#1620
0#
#1630
b10 *
b10 ?
b110000 )
b110000 =
b110 -
b110 >
b100100 +
b100100 A
b11001 ,
b11001 C
b110 H
b110 I
b11 /
b11 <
b110110 0
b10 (
b10 @
b100 '
b100 B
0J
b110 G
b110110 L
b11 K
b11 E
b100100 %
b100100 $
b100100 &
b100100 D
1#
#1640
0#
#1650
1#
#1660
0#
#1670
0"
1#
#1680
0#
#1690
09
1"
1#
#1700
0#
#1710
1;
0:
19
1#
#1720
0#
#1730
1:
0;
b100100 2
b11001 1
b110000 4
b10 3
1#
#1740
0#
#1750
1#
#1760
0#
#1770
1#
#1780
0#
#1790
b100100 *
b100100 ?
b10 ,
b10 C
b10 -
b10 >
b100100 )
b100100 =
b10 H
b1111001 +
b1111001 A
b10 I
b10 /
b10 <
b100010 0
b1 (
b1 @
b110 '
b110 B
1J
b1100 G
b100010 L
b10 K
b1 E
b10110 %
b10110 $
b10110 &
b10110 D
1#
#1800
0#
#1810
1#
#1820
0#
#1830
0"
1#
#1840
0#
#1850
09
1"
1#
#1860
0#
#1870
1;
0:
19
1#
#1880
0#
#1890
1:
0;
b1111001 2
b10 1
b100100 4
b100100 3
1#
#1900
0#
#1910
1#
#1920
0#
#1930
1#
#1940
0#
#1950
1#
#1960
0#
#1970
1#
#1980
0#
#1990
1#
#2000
0#
#2010
1#
#2020
0#
#2030
1#
#2040
0#
#2050
1#
#2060
0#
#2070
1#
#2080
0#
#2090
1#
#2100
0#
#2110
1#
#2120
0#
#2130
1#
#2140
0#
#2150
1#
#2160
0#
#2170
1#
#2180
0#
#2190
1#
#2200
0#
#2210
1#
#2220
0#
#2230
1#
#2240
0#
#2250
1#
#2260
0#
#2270
1#
#2280
0#
#2290
1#
#2300
0#
#2310
1#
#2320
0#
#2330
1#
#2340
0#
#2350
1#
#2360
0#
#2370
1#
#2380
0#
#2390
1#
#2400
0#
#2410
1#
#2420
0#
#2430
1#
#2440
0#
#2450
1#
#2460
0#
#2470
1#
#2480
0#
#2490
1#
#2500
0#
#2510
1#
#2520
0#
#2530
1#
#2540
0#
#2550
1#
#2560
0#
#2570
1#
#2580
0#
#2590
1#
#2600
0#
#2610
1#
#2620
0#
#2630
1#
#2640
0#
#2650
1#
#2660
0#
#2670
1#
#2680
0#
#2690
1#
#2700
0#
#2710
1#
#2720
0#
#2730
1#
#2740
0#
#2750
1#
#2760
0#
#2770
1#
#2780
0#
#2790
1#
#2800
0#
#2810
1#
#2820
0#
#2830
1#
#2840
0#
#2850
1#
#2860
0#
#2870
1#
#2880
0#
#2890
1#
#2900
0#
#2910
1#
#2920
0#
#2930
1#
#2940
0#
#2950
1#
#2960
0#
#2970
1#
#2980
0#
#2990
1#
#3000
0#
#3010
1#
#3020
0#
#3030
1#
#3040
0#
#3050
1#
#3060
0#
#3070
1#
#3080
0#
#3090
1#
#3100
0#
#3110
1#
#3120
0#
#3130
1#
#3140
0#
#3150
1#
#3160
0#
#3170
1#
#3180
0#
#3190
1#
#3200
0#
#3210
1#
#3220
0#
#3230
1#
#3240
0#
#3250
1#
#3260
0#
#3270
1#
#3280
0#
#3290
1#
#3300
0#
#3310
1#
#3320
0#
#3330
1#
#3340
0#
#3350
1#
